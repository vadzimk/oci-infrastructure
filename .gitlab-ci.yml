# using hints from template
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Terraform.gitlab-ci.yml

workflow:
  rules:
  - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "master"
    changes:
      - "**/*.tf"
      - "**/*.sh"
      - "*.gitlab-ci.yml"
    when: always
  - when: never

variables:
  TF_STATE: ${CI_PROJECT_NAME}
  TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_PROJECT_NAME}

include:
#  - template: Terraform/Base.gitlab-ci.yml
  - local: 'Base.gitlab-ci.yml'

stages:
  - validate_infrastructure_code
  - build_infrastructure_plan
  - deploy_infrastructure
  - register_gitlab_runner

validate:
  stage: validate_infrastructure_code
  extends:
    .terraform:validate

plan:
  stage: build_infrastructure_plan
  extends:
    .terraform:build # ==plan
  before_script:
    - cat "$TF_VARS" > "$(pwd)/terraform.tfvars"
    - mkdir "$(pwd)/.oci"
    - cat "$KEY_FILE" > "$(pwd)/.oci/terraform-configuration_2022-06-11T13 01 59.878Z.pem"
    - cat "$WS_KEY_PUB" > "$(pwd)/.oci/wskey.pub"
    - cat "$MACHINE_USER_KEY_PUB" > "$(pwd)/.oci/machine_user_key.pub.pem"
    - ls -la
    - ls -la .oci/
    - export TF_ADDRESS=$TF_ADDRESS
    - echo $TF_ADDRESS
    - |
      terraform init -reconfigure \
      -backend-config="address=${TF_ADDRESS}" \
      -backend-config="lock_address=${TF_ADDRESS}/lock" \
      -backend-config="unlock_address=${TF_ADDRESS}/lock" \
      -backend-config="username=gitlab-ci-token" \
      -backend-config="password=${CI_JOB_TOKEN}" \
      -backend-config="lock_method=POST" \
      -backend-config="unlock_method=DELETE" \
      -backend-config="retry_wait_min=5"


apply:
  stage: deploy_infrastructure
  extends: .terraform:deploy # ==apply
  before_script:
    - cat "$TF_VARS" > "$(pwd)/terraform.tfvars"
    - mkdir "$(pwd)/.oci"
    - cat "$KEY_FILE" > "$(pwd)/.oci/terraform-configuration_2022-06-11T13 01 59.878Z.pem"
    - cat "$WS_KEY_PUB" > "$(pwd)/.oci/wskey.pub"
    - ls -htla
  after_script:
    - gitlab-terraform output -json > ter_output.json # artifact
  artifacts:
    reports:
      dotenv: ter_output.json
  environment:
    name: $TF_STATE
  when: manual
  allow_failure: false # this will block subsequent stages until current job succeeds

register_runner:
  stage: register_gitlab_runner
  before_script:
    - cat $CONFIG_TOML > config.toml
    - ls -htla
    - apk add jq
    - export $GITLAB_RUNNER_PUBLIC_IP=$(cat ter_output.json | jq -r .gitlab-runner-public_ip.value) # parses json object and returns an attribute
  script:
    - scp -o StrictHostKeyChecking=no -i ${WS_KEY} ./gitlab-runner/config.toml ubuntu@${GITLAB_RUNNER_PUBLIC_IP}:~
    - ssh -o StrictHostKeyChecking=no -i ${WS_KEY} ubuntu@${GITLAB_RUNNER_PUBLIC_IP} "sudo mv ~/config.toml /etc/gitlab-runner/;
     sudo gitlab-runner restart;"
  when: delayed
  start_in: 5 minutes # allow infrastructure to be created

