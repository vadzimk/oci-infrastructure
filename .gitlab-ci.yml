# This is a multi-project pipeline
# it will trigger downstream pipelines
# using hints from template
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Terraform.gitlab-ci.yml

#workflow:
#  rules:
#    - when: never

variables:
  TF_STATE: ${CI_PROJECT_NAME}
  TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_PROJECT_NAME}

include:
#  - template: Terraform/Base.gitlab-ci.yml
  - local: 'Base.gitlab-ci.yml'

stages:
  - build_infrastructure
  - deploy_infrastructure

validate_infrastructure:
  stage: build_infrastructure
  extends:
    .terraform:validate

plan_infrastructure:
  stage: build_infrastructure
  needs:
    - validate_infrastructure
  extends:
    .terraform:build # ==plan
  before_script:
    - cat "$TF_VARS" > "$(pwd)/terraform.tfvars"
    - mkdir "$(pwd)/.oci"
    - cat "$KEY_FILE" > "$(pwd)/.oci/terraform-configuration_2022-06-11T13 01 59.878Z.pem"
    - cat "$WS_KEY_PUB" > "$(pwd)/.oci/wskey.pub"
    - export TF_ADDRESS=$TF_ADDRESS
    - echo $TF_ADDRESS
    - echo TF_STATE_NAME=$TF_STATE_NAME
    - |
      terraform init -reconfigure \
      -backend-config="address=${TF_ADDRESS}" \
      -backend-config="lock_address=${TF_ADDRESS}/lock" \
      -backend-config="unlock_address=${TF_ADDRESS}/lock" \
      -backend-config="username=gitlab-ci-token" \
      -backend-config="password=${CI_JOB_TOKEN}" \
      -backend-config="lock_method=POST" \
      -backend-config="unlock_method=DELETE" \
      -backend-config="retry_wait_min=5"

apply_infrastructure:
  stage: deploy_infrastructure
  extends: .terraform:deploy # ==apply
  dependencies:
    - plan_infrastructure
  environment:
    name: $TF_STATE
  when: manual









